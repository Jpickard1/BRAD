{
    "name": "BOT3",
    "description": "this pipeline should be run by BOT3",
    "queue": [
        {
            "order": 0,
            "module": "PLANNER",
            "prompt": null,
            "description": "This step designed the plan. It is placed in the queue because we needed a place holder for 0 indexed lists."
        },
        {
            "order": 1,
            "module": "CODE",
            "prompt": "Load the anndata object from the file located at `/nfs/turbo/umms-indikar/shared/projects/geneformer/fib15k/jpic/HSC-reprogrammed-DE.h5ad` split the dataframe into several dataframes based on if the value of adata.obs is true or false for the following columns: 'REL', 'STAT5A', 'FOS', 'ETV6', 'MEF2C', 'RUNX3', 'FOSB', 'GATA2', 'IKZF1', 'GFI1B'. Using each adata generated above, compute the cosine similarities of the observations in each of the 10 new AnnData objects relative to the observations in the original adata where 'recipe' == 'target'. Then, please generate a separate visualization for each distribution of cosine similarities. Once you make plots for all 10 Transcription Factors, please train a model to predict the distance based on the inclusion or exclusion of each TF and visualize the model. Do not use any loops or conditional statements. Please write the code to study each transcription factor separately.",
            "description": " 1 (CODE)**:\nPrompt: Load the anndata object from the file located at `/nfs/turbo/umms-indikar/shared/projects/geneformer/fib15k/jpic/HSC-reprogrammed-DE.h5ad` and extract the embeddings in `adata.X` and the presence/absence of each TF as features, specifically 'REL', 'STAT5A', 'FOS', 'ETV6', 'MEF2C', 'RUNX3', 'FOSB', 'GATA2', 'IKZF1', 'GFI1B'. Using the extracted features, define the target variable based on the distance to 'target' cells (computed by BOT2) and split the data into training and testing sets. Then, train both a Random Forest model and a Gradient Boosting model on the training data to predict the reprogramming efficiency using the features extracted. Finally, make predictions on the testing data using the better-performing model and create a plot to visualize the predicted reprogramming efficiency.\n\nThis revised plan condenses the original steps into a single step that uses the CODE method to perform all the required tasks. ",
            "output": []
        }
    ]
}