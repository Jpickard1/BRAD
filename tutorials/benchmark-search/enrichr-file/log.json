{
    "0": {
        "time": "Sun Sep 22 14:27:58 2024",
        "elapsed time": 2.195758819580078,
        "prompt": "Conduct a search in the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv file.",
        "output": "Conduct a search in the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv file.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Conduct a search in the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv file.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5953578948974609, 'call back': {'Total Tokens': 423, 'Prompt Tokens': 400, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002345}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\ngeneIndexTable.csv\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Conduct a search in the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv file.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 330, 'total_tokens': 341, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-7d90453d-921f-4832-8a63-1d459e4705f6-0', usage_metadata={'input_tokens': 330, 'output_tokens': 11, 'total_tokens': 341}), 'time': 0.44399428367614746, 'call back': {'Total Tokens': 341, 'Prompt Tokens': 330, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001815}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.38732361793518066
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "1": {
        "time": "Sun Sep 22 14:28:00 2024",
        "elapsed time": 2.2343056201934814,
        "prompt": "Utilize the 'Gene Name' column in geneIndexTable.csv to perform a search in the ENRICHR database.",
        "output": "Utilize the 'Gene Name' column in geneIndexTable.csv to perform a search in the ENRICHR database.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Utilize the 'Gene Name' column in geneIndexTable.csv to perform a search in the ENRICHR database.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene A, Gene B, Gene C\\nload: True', 'time': 0.6130383014678955, 'call back': {'Total Tokens': 419, 'Prompt Tokens': 399, 'Completion Tokens': 20, 'Total Cost (USD)': 0.00022950000000000002}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene A",
                            " Gene B",
                            " Gene C"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Utilize the 'Gene Name' column in geneIndexTable.csv to perform a search in the ENRICHR database.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 347, 'total_tokens': 358, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-6f076f28-63c3-4ba5-819b-a031c7a327d6-0', usage_metadata={'input_tokens': 347, 'output_tokens': 11, 'total_tokens': 358}), 'time': 0.48904967308044434, 'call back': {'Total Tokens': 358, 'Prompt Tokens': 347, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00018999999999999998}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.36705708503723145
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "2": {
        "time": "Sun Sep 22 14:28:02 2024",
        "elapsed time": 2.14850115776062,
        "prompt": "Please search the ENRICHR database with the 'Gene Name' data extracted from geneIndexTable.csv.",
        "output": "Please search the ENRICHR database with the 'Gene Name' data extracted from geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Please search the ENRICHR database with the 'Gene Name' data extracted from geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5985615253448486, 'call back': {'Total Tokens': 419, 'Prompt Tokens': 396, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002325}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Please search the ENRICHR database with the 'Gene Name' data extracted from geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 344, 'total_tokens': 355, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-f73beae9-22e8-4b12-b60f-5743e8ec94e3-0', usage_metadata={'input_tokens': 344, 'output_tokens': 11, 'total_tokens': 355}), 'time': 0.4138224124908447, 'call back': {'Total Tokens': 355, 'Prompt Tokens': 344, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00018849999999999997}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3788025379180908
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "3": {
        "time": "Sun Sep 22 14:28:05 2024",
        "elapsed time": 2.379220724105835,
        "prompt": "Initiate a search in the ENRICHR database using gene names from the 'Gene Name' column of geneIndexTable.csv.",
        "output": "Initiate a search in the ENRICHR database using gene names from the 'Gene Name' column of geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Initiate a search in the ENRICHR database using gene names from the 'Gene Name' column of geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5758397579193115, 'call back': {'Total Tokens': 424, 'Prompt Tokens': 401, 'Completion Tokens': 23, 'Total Cost (USD)': 0.00023500000000000002}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Initiate a search in the ENRICHR database using gene names from the 'Gene Name' column of geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 349, 'total_tokens': 360, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-fc21a341-28c1-410a-8cb6-f88bc54bdcdf-0', usage_metadata={'input_tokens': 349, 'output_tokens': 11, 'total_tokens': 360}), 'time': 0.5533838272094727, 'call back': {'Total Tokens': 360, 'Prompt Tokens': 349, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00019099999999999998}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3760347366333008
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "4": {
        "time": "Sun Sep 22 14:28:07 2024",
        "elapsed time": 2.1669676303863525,
        "prompt": "Leverage the 'Gene Name' entries in geneIndexTable.csv to query the ENRICHR database.",
        "output": "Leverage the 'Gene Name' entries in geneIndexTable.csv to query the ENRICHR database.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Leverage the 'Gene Name' entries in geneIndexTable.csv to query the ENRICHR database.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5624146461486816, 'call back': {'Total Tokens': 419, 'Prompt Tokens': 396, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002325}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Leverage the 'Gene Name' entries in geneIndexTable.csv to query the ENRICHR database.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 345, 'total_tokens': 356, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-bdc2ddab-63fc-4f55-aece-819fb0db1e40-0', usage_metadata={'input_tokens': 345, 'output_tokens': 11, 'total_tokens': 356}), 'time': 0.47520875930786133, 'call back': {'Total Tokens': 356, 'Prompt Tokens': 345, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00018899999999999999}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3639960289001465
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "5": {
        "time": "Sun Sep 22 14:28:09 2024",
        "elapsed time": 2.239168405532837,
        "prompt": "Perform a search in the ENRICHR database utilizing the 'Gene Name' information from geneIndexTable.csv.",
        "output": "Perform a search in the ENRICHR database utilizing the 'Gene Name' information from geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Perform a search in the ENRICHR database utilizing the 'Gene Name' information from geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.6112244129180908, 'call back': {'Total Tokens': 420, 'Prompt Tokens': 397, 'Completion Tokens': 23, 'Total Cost (USD)': 0.00023300000000000003}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Perform a search in the ENRICHR database utilizing the 'Gene Name' information from geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 351, 'total_tokens': 362, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-0aeb07e8-cdba-44d9-86c0-75ec362b1b3b-0', usage_metadata={'input_tokens': 351, 'output_tokens': 11, 'total_tokens': 362}), 'time': 0.4954981803894043, 'call back': {'Total Tokens': 362, 'Prompt Tokens': 351, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00019199999999999998}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3688945770263672
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "6": {
        "time": "Sun Sep 22 14:28:11 2024",
        "elapsed time": 2.124357223510742,
        "prompt": "Access the ENRICHR database and search using the 'Gene Name' column from the geneIndexTable.csv dataset.",
        "output": "Access the ENRICHR database and search using the 'Gene Name' column from the geneIndexTable.csv dataset.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Access the ENRICHR database and search using the 'Gene Name' column from the geneIndexTable.csv dataset.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.521873950958252, 'call back': {'Total Tokens': 421, 'Prompt Tokens': 398, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002335}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Access the ENRICHR database and search using the 'Gene Name' column from the geneIndexTable.csv dataset.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 352, 'total_tokens': 363, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-1651678e-3577-42a1-94e8-ab97da38674f-0', usage_metadata={'input_tokens': 352, 'output_tokens': 11, 'total_tokens': 363}), 'time': 0.46536707878112793, 'call back': {'Total Tokens': 363, 'Prompt Tokens': 352, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001925}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3758509159088135
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "7": {
        "time": "Sun Sep 22 14:28:13 2024",
        "elapsed time": 2.1351239681243896,
        "prompt": "Use the 'Gene Name' data in geneIndexTable.csv to carry out a search in the ENRICHR database.",
        "output": "Use the 'Gene Name' data in geneIndexTable.csv to carry out a search in the ENRICHR database.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Use the 'Gene Name' data in geneIndexTable.csv to carry out a search in the ENRICHR database.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene A, Gene B, Gene C\\nload: True', 'time': 0.5811824798583984, 'call back': {'Total Tokens': 419, 'Prompt Tokens': 399, 'Completion Tokens': 20, 'Total Cost (USD)': 0.00022950000000000002}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene A",
                            " Gene B",
                            " Gene C"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Use the 'Gene Name' data in geneIndexTable.csv to carry out a search in the ENRICHR database.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 353, 'total_tokens': 364, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-48efbacf-18d1-479b-b4eb-2c05c246dd41-0', usage_metadata={'input_tokens': 353, 'output_tokens': 11, 'total_tokens': 364}), 'time': 0.4146082401275635, 'call back': {'Total Tokens': 364, 'Prompt Tokens': 353, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00019299999999999997}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3683631420135498
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "8": {
        "time": "Sun Sep 22 14:28:15 2024",
        "elapsed time": 2.121800661087036,
        "prompt": "Execute a search on the ENRICHR database with gene names listed in the 'Gene Name' column of geneIndexTable.csv.",
        "output": "Execute a search on the ENRICHR database with gene names listed in the 'Gene Name' column of geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Execute a search on the ENRICHR database with gene names listed in the 'Gene Name' column of geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5518004894256592, 'call back': {'Total Tokens': 424, 'Prompt Tokens': 401, 'Completion Tokens': 23, 'Total Cost (USD)': 0.00023500000000000002}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Execute a search on the ENRICHR database with gene names listed in the 'Gene Name' column of geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 355, 'total_tokens': 366, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-411a6fb7-e1b8-4705-891e-8add0a7c0b2c-0', usage_metadata={'input_tokens': 355, 'output_tokens': 11, 'total_tokens': 366}), 'time': 0.43056774139404297, 'call back': {'Total Tokens': 366, 'Prompt Tokens': 355, 'Completion Tokens': 11, 'Total Cost (USD)': 0.000194}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.38184428215026855
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "9": {
        "time": "Sun Sep 22 14:28:18 2024",
        "elapsed time": 2.0912251472473145,
        "prompt": "Search the ENRICHR database by referencing the 'Gene Name' column from the geneIndexTable.csv.",
        "output": "Search the ENRICHR database by referencing the 'Gene Name' column from the geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Search the ENRICHR database by referencing the 'Gene Name' column from the geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5342819690704346, 'call back': {'Total Tokens': 419, 'Prompt Tokens': 396, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002325}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Search the ENRICHR database by referencing the 'Gene Name' column from the geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 350, 'total_tokens': 361, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-e69c4fce-4ceb-4557-be04-a8f5431054a4-0', usage_metadata={'input_tokens': 350, 'output_tokens': 11, 'total_tokens': 361}), 'time': 0.4219801425933838, 'call back': {'Total Tokens': 361, 'Prompt Tokens': 350, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001915}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3674335479736328
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "10": {
        "time": "Sun Sep 22 14:28:20 2024",
        "elapsed time": 2.1337358951568604,
        "prompt": "Please perform a database search in ENRICHR using the 'Gene Name' entries from geneIndexTable.csv.",
        "output": "Please perform a database search in ENRICHR using the 'Gene Name' entries from geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Please perform a database search in ENRICHR using the 'Gene Name' entries from geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.6166002750396729, 'call back': {'Total Tokens': 420, 'Prompt Tokens': 397, 'Completion Tokens': 23, 'Total Cost (USD)': 0.00023300000000000003}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Please perform a database search in ENRICHR using the 'Gene Name' entries from geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 351, 'total_tokens': 362, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-34ab62e2-418c-4f59-a1ee-de0418c0272a-0', usage_metadata={'input_tokens': 351, 'output_tokens': 11, 'total_tokens': 362}), 'time': 0.3840205669403076, 'call back': {'Total Tokens': 362, 'Prompt Tokens': 351, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00019199999999999998}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.37518787384033203
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "11": {
        "time": "Sun Sep 22 14:28:22 2024",
        "elapsed time": 2.6720993518829346,
        "prompt": "Query the ENRICHR database with the 'Gene Name' data derived from the geneIndexTable.csv file.",
        "output": "Query the ENRICHR database with the 'Gene Name' data derived from the geneIndexTable.csv file.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Query the ENRICHR database with the 'Gene Name' data derived from the geneIndexTable.csv file.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5998213291168213, 'call back': {'Total Tokens': 420, 'Prompt Tokens': 397, 'Completion Tokens': 23, 'Total Cost (USD)': 0.00023300000000000003}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Query the ENRICHR database with the 'Gene Name' data derived from the geneIndexTable.csv file.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 351, 'total_tokens': 362, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-971a3723-5caa-41aa-92f5-1b614baed0e4-0', usage_metadata={'input_tokens': 351, 'output_tokens': 11, 'total_tokens': 362}), 'time': 0.9164810180664062, 'call back': {'Total Tokens': 362, 'Prompt Tokens': 351, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00019199999999999998}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.381669282913208
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "12": {
        "time": "Sun Sep 22 14:28:25 2024",
        "elapsed time": 2.4794201850891113,
        "prompt": "Run a search on the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv.",
        "output": "Run a search on the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Run a search on the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5229060649871826, 'call back': {'Total Tokens': 421, 'Prompt Tokens': 398, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002335}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Run a search on the ENRICHR database using the 'Gene Name' column from the geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 352, 'total_tokens': 363, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-e8338368-74de-4baf-969a-94efa653da79-0', usage_metadata={'input_tokens': 352, 'output_tokens': 11, 'total_tokens': 363}), 'time': 0.8052818775177002, 'call back': {'Total Tokens': 363, 'Prompt Tokens': 352, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001925}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3919827938079834
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "13": {
        "time": "Sun Sep 22 14:28:27 2024",
        "elapsed time": 2.20819354057312,
        "prompt": "Engage the ENRICHR database to search for gene names from the 'Gene Name' section of geneIndexTable.csv.",
        "output": "Engage the ENRICHR database to search for gene names from the 'Gene Name' section of geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Engage the ENRICHR database to search for gene names from the 'Gene Name' section of geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5923211574554443, 'call back': {'Total Tokens': 423, 'Prompt Tokens': 400, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002345}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Engage the ENRICHR database to search for gene names from the 'Gene Name' section of geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 354, 'total_tokens': 365, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-7d78bfc3-87cc-4a13-bbe8-4fbc2fc4aa68-0', usage_metadata={'input_tokens': 354, 'output_tokens': 11, 'total_tokens': 365}), 'time': 0.4676365852355957, 'call back': {'Total Tokens': 365, 'Prompt Tokens': 354, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001935}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.37355780601501465
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "14": {
        "time": "Sun Sep 22 14:28:32 2024",
        "elapsed time": 4.748279094696045,
        "prompt": "Input the 'Gene Name' values from geneIndexTable.csv to execute a search in the ENRICHR database.",
        "output": "Input the 'Gene Name' values from geneIndexTable.csv to execute a search in the ENRICHR database.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Input the 'Gene Name' values from geneIndexTable.csv to execute a search in the ENRICHR database.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene A, Gene B, Gene C\\nload: True', 'time': 0.5888950824737549, 'call back': {'Total Tokens': 418, 'Prompt Tokens': 398, 'Completion Tokens': 20, 'Total Cost (USD)': 0.000229}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene A",
                            " Gene B",
                            " Gene C"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Input the 'Gene Name' values from geneIndexTable.csv to execute a search in the ENRICHR database.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 352, 'total_tokens': 363, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-5f3ba8e5-f46e-4951-8663-d24cad5b52fa-0', usage_metadata={'input_tokens': 352, 'output_tokens': 11, 'total_tokens': 363}), 'time': 3.039921760559082, 'call back': {'Total Tokens': 363, 'Prompt Tokens': 352, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001925}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.35911083221435547
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "15": {
        "time": "Sun Sep 22 14:28:34 2024",
        "elapsed time": 2.100353717803955,
        "prompt": "Utilize gene names from the 'Gene Name' column in geneIndexTable.csv to conduct a search in ENRICHR.",
        "output": "Utilize gene names from the 'Gene Name' column in geneIndexTable.csv to conduct a search in ENRICHR.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Utilize gene names from the 'Gene Name' column in geneIndexTable.csv to conduct a search in ENRICHR.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5359466075897217, 'call back': {'Total Tokens': 423, 'Prompt Tokens': 400, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002345}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Utilize gene names from the 'Gene Name' column in geneIndexTable.csv to conduct a search in ENRICHR.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 354, 'total_tokens': 365, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-69d23a42-9fc7-49be-b752-c102361b2c01-0', usage_metadata={'input_tokens': 354, 'output_tokens': 11, 'total_tokens': 365}), 'time': 0.44077086448669434, 'call back': {'Total Tokens': 365, 'Prompt Tokens': 354, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001935}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3649585247039795
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "16": {
        "time": "Sun Sep 22 14:28:36 2024",
        "elapsed time": 2.169167995452881,
        "prompt": "Perform an ENRICHR database search with gene names sourced from the 'Gene Name' column of geneIndexTable.csv.",
        "output": "Perform an ENRICHR database search with gene names sourced from the 'Gene Name' column of geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Perform an ENRICHR database search with gene names sourced from the 'Gene Name' column of geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.6231129169464111, 'call back': {'Total Tokens': 422, 'Prompt Tokens': 399, 'Completion Tokens': 23, 'Total Cost (USD)': 0.00023400000000000002}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Perform an ENRICHR database search with gene names sourced from the 'Gene Name' column of geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 353, 'total_tokens': 364, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-bf6e291b-0771-449b-ae65-ff97e9ed0b7c-0', usage_metadata={'input_tokens': 353, 'output_tokens': 11, 'total_tokens': 364}), 'time': 0.41283273696899414, 'call back': {'Total Tokens': 364, 'Prompt Tokens': 353, 'Completion Tokens': 11, 'Total Cost (USD)': 0.00019299999999999997}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.37696051597595215
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "17": {
        "time": "Sun Sep 22 14:28:39 2024",
        "elapsed time": 2.47790789604187,
        "prompt": "Tap into the ENRICHR database to search using gene names taken from the geneIndexTable.csv file.",
        "output": "Tap into the ENRICHR database to search using gene names taken from the geneIndexTable.csv file.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Tap into the ENRICHR database to search using gene names taken from the geneIndexTable.csv file.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.5515673160552979, 'call back': {'Total Tokens': 419, 'Prompt Tokens': 396, 'Completion Tokens': 23, 'Total Cost (USD)': 0.0002325}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Tap into the ENRICHR database to search using gene names taken from the geneIndexTable.csv file.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: gene names', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 350, 'total_tokens': 361, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-2cbd98d1-8577-4e05-94be-9eb7842d9204-0', usage_metadata={'input_tokens': 350, 'output_tokens': 11, 'total_tokens': 361}), 'time': 0.4129908084869385, 'call back': {'Total Tokens': 361, 'Prompt Tokens': 350, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001915}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "gene names"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='You are a digital assistant responsible for identifying the columns of a spreedsheet based on the users query. Below will be a list of possible columns, and please select the column the user is interested. Use the exact output format and provide no extra informations.\\n\\n**AVAILABLE COLUMNS**\\nStable ID, Gene Name, Transcription Factor, Chromosome, Start, End\\n\\n**USER QUERY**\\n{user_query}\\n\\nField=<selected field>\\n'",
                    "input": "Tap into the ENRICHR database to search using gene names taken from the geneIndexTable.csv file.",
                    "output": "Field=Gene Name",
                    "parsedOutput": {
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select Field"
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3755919933319092
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "18": {
        "time": "Sun Sep 22 14:28:41 2024",
        "elapsed time": 2.1708502769470215,
        "prompt": "Utilize the 'Gene Name' information from geneIndexTable.csv for a search in the ENRICHR database.",
        "output": "Utilize the 'Gene Name' information from geneIndexTable.csv for a search in the ENRICHR database.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Utilize the 'Gene Name' information from geneIndexTable.csv for a search in the ENRICHR database.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene A, Gene B, Gene C\\nload: True', 'time': 0.5407724380493164, 'call back': {'Total Tokens': 418, 'Prompt Tokens': 398, 'Completion Tokens': 20, 'Total Cost (USD)': 0.000229}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene A",
                            " Gene B",
                            " Gene C"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Utilize the 'Gene Name' information from geneIndexTable.csv for a search in the ENRICHR database.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 352, 'total_tokens': 363, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-12a76481-e11b-4671-82d4-31feef425c3e-0', usage_metadata={'input_tokens': 352, 'output_tokens': 11, 'total_tokens': 363}), 'time': 0.4893803596496582, 'call back': {'Total Tokens': 363, 'Prompt Tokens': 352, 'Completion Tokens': 11, 'Total Cost (USD)': 0.0001925}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.3768162727355957
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    },
    "19": {
        "time": "Sun Sep 22 14:28:43 2024",
        "elapsed time": 2.311171531677246,
        "prompt": "Carry out a search in the ENRICHR database by using the 'Gene Name' column found in geneIndexTable.csv.",
        "output": "Carry out a search in the ENRICHR database by using the 'Gene Name' column found in geneIndexTable.csv.The following table was generated by quering the gene list against GO_Biological_Process_2021:",
        "process": {
            "module": "DATABASE",
            "steps": [
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['history', 'input'] template='Current conversation:\\n{history}\\n    \\nGENEONTOLOGY: The Gene Ontology (GO) is an initiative to unify the representation of gene and gene product attributes across all species via the aims: 1) maintain and develop its controlled vocabulary of gene and gene product attributes; 2) annotate genes and gene products, and assimilate and disseminate annotation data; and 3) provide tools for easy access to all aspects of the data provided by the project, and to enable functional interpretation of experimental data using the GO.\\n    \\nENRICHR: is a tool used to lookup sets of genes and their functional association. ENRICHR has access to many gene-set libraries including Allen_Brain_Atlas_up, ENCODE_Histone_Modifications_2015, Enrichr_Libraries_Most_Popular_Genes, FANTOM6_lncRNA_KD_DEGs, GO_Biological_Process_2023, GTEx, Human_Gene_Atlas, KEGG, REACTOME, Transcription_Factor_PPIs, WikiPathways and many others databases.\\n    \\nAvailable Tables:\\n\\n\\nQuery:{input}\\n\\n**INSTRUCTIONS**\\n1. From the query, decide if GENEONTOLOGY or ENRICHR should be used\\n2. Identify genes in the users input that should be searched. propose genes with similar names, correct the users spelling, or make small modifications to the list, but do not propose genes that are not found in the humans input.\\n3. Indicate if genes need to be loaded from a file: True/False\\n4. Use the following output format with no additional information or explination.\\n\\ndatabase: <ENRICHR or GENEONTOLOGY>\\ngenes: <None or Gene 1, Gene 2, Gene 3, ...>\\nload: <True/False>\\n'",
                    "input": "Carry out a search in the ENRICHR database by using the 'Gene Name' column found in geneIndexTable.csv.",
                    "output": "{'content': 'database: ENRICHR\\ngenes: Gene 1, Gene 2, Gene 3\\nload: True', 'time': 0.6684870719909668, 'call back': {'Total Tokens': 424, 'Prompt Tokens': 401, 'Completion Tokens': 23, 'Total Cost (USD)': 0.00023500000000000002}}",
                    "parsedOutput": {
                        "database": "ENRICHR",
                        "genes": [
                            "Gene 1",
                            " Gene 2",
                            " Gene 3"
                        ],
                        "load": "True"
                    },
                    "purpose": "Select database"
                },
                {
                    "llm": "client=<openai.resources.chat.completions.Completions object at 0x14ad5d3d0190> async_client=<openai.resources.chat.completions.AsyncCompletions object at 0x14ad5bfe0a50> model_name='gpt-3.5-turbo-0125' temperature=0.0 openai_api_key=SecretStr('**********') openai_proxy=''",
                    "memory": "None",
                    "prompt": "input_variables=['user_query'] template='**INSTRUCTIONS**\\nYou are a digital assistant responsible for determining which file we should load based on a users prompt. You many choose either the files listed under AVAILABLE FILES or found in the USER QUERY. Based upon the user query, specify which if any fields should be loaded from the table. Rather than specifying a table name, the user might specify ot load data from a particular step. In this case, files are saved with the prefix `S<number>-<File Name>` to denote which step to load them from.\\n\\n**EXAMPLES**\\n\\nHere the files are selected by name:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <XXX> output from <BBB> for the this phase of anlaysis.\\n\\nOutput:\\nFile: S2-<BBB>.csv\\nFields: <XXX>\\n```\\n\\nHere the files are selected by Step:\\n```\\nAvailable Files:\\nS1-<AAA>.tsv\\nS2-<BBB>.csv\\n\\nUser Query:\\nUse the <YYY> identified in Step 1 as input to the codes.\\n\\nOutput:\\nFile: S1-<AAA>.tsv\\nFields: <YYY>\\n```\\n\\n**USER QUERY**\\n{user_query}\\n\\nYou must select one of the following available files based on that users query:\\nlog.json\\n.ipynb_checkpoints\\nENRICHR-GO_Biological_Process_2021.csv\\ngeneIndexTable.csv\\nimages\\n\\n**OUTPUT**\\nFile: <which file you selected>\\nFields: <which fields in the file are important>\\n'",
                    "input": "Carry out a search in the ENRICHR database by using the 'Gene Name' column found in geneIndexTable.csv.",
                    "output": "{'content': AIMessage(content='File: geneIndexTable.csv\\nFields: Gene Name', response_metadata={'token_usage': {'completion_tokens': 11, 'prompt_tokens': 355, 'total_tokens': 366, 'completion_tokens_details': {'reasoning_tokens': 0}}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None}, id='run-c3addcf9-d5f9-4873-a289-37fd25ddeba8-0', usage_metadata={'input_tokens': 355, 'output_tokens': 11, 'total_tokens': 366}), 'time': 0.4987828731536865, 'call back': {'Total Tokens': 366, 'Prompt Tokens': 355, 'Completion Tokens': 11, 'Total Cost (USD)': 0.000194}}",
                    "parsedOutput": {
                        "File": "geneIndexTable.csv",
                        "Fields": "Gene Name"
                    },
                    "purpose": "Select File"
                },
                {
                    "file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/geneIndexTable.csv",
                    "delimiter": ","
                },
                {
                    "genes": "['MT-RNR1', 'MT-TV', 'MT-RNR2', 'MT-TL1', 'MT-ND1', 'MT-TI', 'MT-TQ', 'MT-TM', 'MT-ND2', 'MT-TW', 'MT-TN', 'MT-TC', 'MT-TY', 'MT-CO1', 'MT-TS1', 'MT-TD', 'MT-CO2', 'MT-TK', 'MT-ATP8', 'MT-CO3', 'MT-TG', 'MT-ND3', 'MT-TR', 'MT-ND4L', 'MT-ND4', 'MT-TH', 'MT-TS2', 'MT-TL2', 'MT-ND5', 'MT-ND6', 'MT-TE', 'MT-CYB', 'MT-TT', 'MT-TP', nan, 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', 'INTS3', nan, 'KIR3DL1', 'KIR3DL1', 'KIR3DL1', 'KIR2DS4', 'KIR3DL1', nan, 'KIR2DS4', nan, nan, 'KIR2DS5', 'LILRP2', 'LILRP2', 'LILRP2', 'LILRP2', 'KIR2DL4', 'KIR2DL4', nan, 'KIR2DS4', 'KIR3DP1', 'KIR3DP1', 'KIR2DL1', 'LILRP1', 'KIR2DL3', 'LILRP2', 'LILRP2', 'KIR2DS4', nan, nan, nan, 'LILRP2', 'LILRP2', nan, 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'FCAR', 'KIR2DS3', nan, 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1', 'NCR1']",
                    "plot": true,
                    "save": true,
                    "database": "GO_Biological_Process_2021",
                    "default db": false,
                    "time": 0.38044238090515137
                },
                {
                    "func": "utils.save",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/ENRICHR-GO_Biological_Process_2021.csv"
                },
                {
                    "func": "utils.savefig",
                    "new file": "/home/jpic/RAG-DEV/tutorials/benchmark-search/2024-09-22_14-25-22/images/ENRICHR-GO_Biological_Process_2021.png"
                }
            ],
            "database-function": "<function queryEnrichr at 0x14ae309e4c20>"
        },
        "status": {
            "databases": "{'RAG': None}",
            "current table": {
                "key": null,
                "tab": null
            },
            "current documents": null,
            "queue pointer": 0,
            "queue": []
        }
    }
}